---
- name: Get instance ID
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/instance-id
    return_content: yes
  register: instance_id_result
  changed_when: false

- name: Get instance Region
  ansible.builtin.uri:
    url: http://169.254.169.254/latest/meta-data/placement/region
    return_content: yes
  register: instance_region_result
  changed_when: false

- name: Get Hostname tag
  ansible.builtin.command: >
    aws ec2 describe-instances
    --instance-ids {{ instance_id_result.content }}
    --query "Reservations[*].Instances[*].Tags[?Key=='Hostname'].Value"
    --output text
  register: hostname_tag_result
  changed_when: false
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    AWS_DEFAULT_REGION: "{{ instance_region_result.content }}"

- name: Get ServiceSubType tag
  ansible.builtin.command: >
    aws ec2 describe-instances
    --instance-ids {{ instance_id_result.content }}
    --query "Reservations[*].Instances[*].Tags[?Key=='ServiceSubType'].Value"
    --output text
  register: service_subtype_result
  changed_when: false
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    AWS_DEFAULT_REGION: "{{ instance_region_result.content }}"

- name: Set instance facts
  ansible.builtin.set_fact:
    instance_id: "{{ instance_id_result.content | trim }}"
    instance_region: "{{ instance_region_result.content | trim }}"
    desired_hostname: "{{ hostname_tag_result.stdout | trim }}"
    service_subtype: "{{ service_subtype_result.stdout | trim }}"
