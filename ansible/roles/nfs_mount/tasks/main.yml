---
- name: Set vault path for NFS configuration
  ansible.builtin.set_fact:
    nfs_vault_path: "{{ vault_base_path }}/nfs"

- name: Retrieve NFS config from Hashicorp Vault
  ansible.builtin.set_fact:
    nfs_vault_config: "{{ lookup('community.hashi_vault.hashi_vault', nfs_vault_path) }}"

- name: Debug NFS vault configuration
  ansible.builtin.debug:
    var: nfs_vault_config
    verbosity: 1

- name: Check if CVO is present in vault config
  ansible.builtin.assert:
    that:
      - nfs_vault_config.cvo is defined
      - nfs_vault_config.cvo | trim | length > 0
    msg: "Missing NFS CVO configuration in Vault at '{{ nfs_vault_path }}'"

- name: Define NFS mounts configuration
  ansible.builtin.set_fact:
    nfs_mounts:
      - server: "{{ nfs_vault_config.cvo }}"
        export_path: "/e2e_home_{{ service_subtype.split('-')[-1] }}"
        mount_point: "/home/ec2-user"
        owner: "ec2-user"
        group: "ec2-user"
      - server: "{{ nfs_vault_config.cvo }}"
        export_path: "/e2e_image_cache"
        mount_point: "/S3Image"
        owner: "ec2-user"
        group: "ec2-user"

- name: Debug NFS mount configuration
  ansible.builtin.debug:
    msg:
      - "NFS Server: {{ item.server }}"
      - "NFS Export Path: {{ item.export_path }}"
      - "Mount Point: {{ item.mount_point }}"
      - "Service SubType: {{ service_subtype }}"
  loop: "{{ nfs_mounts }}"

- name: Ensure mount point directories exist
  ansible.builtin.file:
    path: "{{ item.mount_point }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "0755"
  loop: "{{ nfs_mounts }}"

- name: Check if NFS mounts already exist in fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: "^{{ item.server }}:{{ item.export_path }}\\s+{{ item.mount_point }}"
    state: absent
  check_mode: yes
  register: fstab_checks
  changed_when: false
  loop: "{{ nfs_mounts }}"

- name: Add NFS mounts to fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "{{ item.item.server }}:{{ item.item.export_path }} {{ item.item.mount_point }} nfs defaults  0 0"
    backup: yes
  when: item.found == 0
  loop: "{{ fstab_checks.results }}"

- name: Test NFS connectivity
  ansible.builtin.command: showmount -e {{ nfs_vault_config.cvo }}
  register: showmount_result
  changed_when: false
  failed_when: false

- name: Debug NFS exports
  ansible.builtin.debug:
    msg: "Available NFS exports: {{ showmount_result.stdout_lines }}"
  when: showmount_result.rc == 0

- name: Mount NFS filesystems
  ansible.builtin.mount:
    path: "{{ item.mount_point }}"
    src: "{{ item.server }}:{{ item.export_path }}"
    fstype: nfs
    opts: defaults
    state: mounted
  loop: "{{ nfs_mounts }}"

- name: Verify NFS mounts
  ansible.builtin.command: df -h {{ item.mount_point }}
  register: mount_verifications
  changed_when: false
  loop: "{{ nfs_mounts }}"

- name: Debug mount verifications
  ansible.builtin.debug:
    msg: "Mount verification for {{ item.item.mount_point }}: {{ item.stdout }}"
  loop: "{{ mount_verifications.results }}"

- name: Ensure correct ownership of mounted directories
  ansible.builtin.file:
    path: "{{ item.item.mount_point }}"
    owner: "{{ item.item.owner }}"
    group: "{{ item.item.group }}"
    recurse: no
  when: item.rc == 0
  loop: "{{ mount_verifications.results }}"
